
function spawn_dead_zones()
    delete_all_dead_zones()
    Wait.frames(function()
        spawn_dead_zones_after_deletion()
    end, 1)
end

function delete_all_dead_zones()
    local all_objs = getAllObjects()
    for _,obj in ipairs(all_objs) do
        local name = obj.getName()
        if str_starts_with(name, 'dead zone') then
            -- This executes on next frame
            obj.destroy()
        end
    end
end

function create_zone(name, position, size)
    local zone_spawn = {
        position = position,
        scale = size,
        type = 'ScriptingTrigger',
        callback = 'callback_zone'
    }
    local obj = spawnObject(zone_spawn)
    obj.setName(name)
end

function spawn_dead_zones_after_deletion()
    create_zone('dead zone red',
                { x = 0, y = 1.6, z = -27 },
                { x = 10, y = 1, z = 10 })
    create_zone('dead zone blue',
                { x = 0, y = 1.6, z = 27 },
                { x = 10, y = 1, z = 10 })
end

function update_zone_value(zone)
    local name = zone.getName()
    local is_red = false
    if str_has_substr(name, 'red') then
        is_red = true
    end

    local dead = 0
    local has_double_element = false
    for _,obj in ipairs(zone.getObjects()) do
        local obj_name = obj.getName()
        print_debug('Name is <' .. obj_name .. '>')
        if str_has_substr(obj_name, 'base') then
            if not (str_has_substr(obj_name, 'Hd')
                    or str_has_substr(obj_name, 'SCh')) then
                dead = dead + 1
            end

            if str_has_substr(obj_name, '6Kn')
               or str_has_substr(obj_name, '6Cv')
               or str_has_substr(obj_name, '8Sp')
               or str_has_substr(obj_name, '6Bd')
               or str_has_substr(obj_name, '8Bw') then
                has_double_element = true
            end
            
            if str_has_substr(obj_name, 'Gen') then
                -- Generals count as one extra element lost
                dead = dead + 1
            end
        end
    end

    -- The first double element counts as one additional death
    if has_double_element then
        dead = dead + 1
    end

    if is_red then
        UI.setValue('text_dead_red', dead)
        if dead < 3 then
            UI.setAttribute('dead_red', 'image', 'deadcounter1r')
        elseif dead >= 3 and dead < 5 then
            UI.setAttribute('dead_red', 'image', 'deadcounter2r')
        else
            UI.setAttribute('dead_red', 'image', 'deadcounter3r')
        end
    else
        UI.setValue('text_dead_blue', dead)
        if dead < 3 then
            UI.setAttribute('dead_blue', 'image', 'deadcounter1b')
        elseif dead >= 3 and dead < 5 then
            UI.setAttribute('dead_blue', 'image', 'deadcounter2b')
        else
            UI.setAttribute('dead_blue', 'image', 'deadcounter3b')
        end
    end
end

function callback_zone(zone, name, color)
    update_zone_value(zone)
end

function onObjectEnterScriptingZone(zone, obj)
    if not str_has_substr(obj.getName(), 'base') then
        return 
    end
    print_debug(obj.getName() .. ' entered ' .. zone.getName())
    Wait.frames(function() update_zone_value(zone) end, 60)
end

function onObjectLeaveScriptingZone(zone, obj)
    print_debug(obj.getName() .. ' entered ' .. zone.getName())
    if not str_has_substr(obj.getName(), 'base') then
        return 
    end
    print_debug(obj.getName() .. ' entered ' .. zone.getName())
    Wait.frames(function() update_zone_value(zone) end, 60)
end